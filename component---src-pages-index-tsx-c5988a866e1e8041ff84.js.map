{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/navMenu/NavMenuButton.tsx","webpack://gatsby-starter-default/./src/components/navMenu/NavMenu.tsx","webpack://gatsby-starter-default/./src/hooks/useSMPData.ts","webpack://gatsby-starter-default/./src/pages/index.tsx","webpack://gatsby-starter-default/./node_modules/react-swipeable/dist/react-swipeable.umd.js"],"names":["name","primary_color","handlers","useSwipeable","onSwipedRight","navigate","toLowerCase","className","style","boxShadow","border","Link","to","textDecoration","key","color","toUpperCase","smps","useStaticQuery","nodes","map","smp","i","Fragment","title","description","exports","React","_extends","Object","assign","target","arguments","length","source","prototype","hasOwnProperty","call","apply","this","LEFT","RIGHT","UP","DOWN","defaultProps","delta","preventDefaultTouchmoveEvent","rotationAngle","trackMouse","trackTouch","initialState","first","initial","start","swiping","xy","mouseMove","mouseUp","touchEnd","touchMove","touchStart","getDirection","absX","absY","deltaX","deltaY","rotateXYByAngle","pos","angle","angleInRadians","Math","PI","cos","sin","getHandlers","set","handlerProps","onStart","event","touches","state","props","document","addEventListener","onMove","onUp","_ref","clientX","clientY","concat","timeStamp","_ref2","_rotateXYByAngle","x","y","abs","time","velocity","sqrt","vxvy","dir","eventData","onSwipeStart","onSwiping","cancelablePageSwipe","onSwiped","cancelable","preventDefault","onEnd","onSwipedDir","onTap","cleanUpMouse","removeEventListener","e","attachTouch","el","passive","cleanup","tls","forEach","_ref3","h","_ref4","output","ref","addState","cleanUpTouch","undefined","onMouseDown","updateTransientState","options","transientState","useRef","transientProps","current","_React$useMemo","useMemo","stateSetter","factory"],"mappings":"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","file":"component---src-pages-index-tsx-c5988a866e1e8041ff84.js","sourcesContent":["import { Link, navigate } from 'gatsby';\r\nimport React from 'react';\r\nimport { useSwipeable } from 'react-swipeable';\r\nimport { SMP } from '../../Model';\r\nimport './NavMenu.css';\r\n\r\nconst SMPTitle: React.FunctionComponent<SMP> = ({ name, primary_color }) => {\r\n    const handlers = useSwipeable({\r\n        onSwipedRight: () => navigate(`/${name.toLowerCase()}`),\r\n    });\r\n\r\n    return (\r\n        <div\r\n            className=\"smp-title-container fly-in\"\r\n            style={{ boxShadow: `12px 12px ${primary_color}`, border: `6px 6px ${primary_color}` }}\r\n            {...handlers}\r\n        >\r\n            <Link to={`/${name.toLowerCase()}`} style={{ textDecoration: 'none' }} key={name}>\r\n                <div className=\"smp-title-text-wrapper\">\r\n                    <h1 className=\"smp-title-text\" style={{ color: primary_color }}>\r\n                        {name.toUpperCase()}\r\n                    </h1>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SMPTitle;\r\n","import { Link } from 'gatsby';\r\nimport React, { Fragment } from 'react';\r\nimport { FunctionComponent } from 'react';\r\nimport useSMPData from '../../hooks/useSMPData';\r\nimport SMPTitle from './NavMenuButton';\r\nimport './NavMenu.css';\r\n\r\nconst SMPNavMenu: FunctionComponent = () => {\r\n    const smps = useSMPData();\r\n    return (\r\n        <div className=\"smp-menu\">\r\n            {smps.map((smp, i) => (\r\n                <Fragment key={smp.name}>\r\n                    {i ? <div className=\"smp-menu-spacer\" /> : null}\r\n                    <SMPTitle {...smp} />\r\n                </Fragment>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SMPNavMenu;\r\n","import { useStaticQuery, graphql } from 'gatsby';\r\nimport { SMP } from '../Model';\r\n\r\nexport const query = graphql`\r\n    query SMPQuery {\r\n        smps: allSmpData {\r\n            nodes {\r\n                smp_id\r\n                name\r\n                max_lives\r\n                description\r\n                primary_color\r\n                secondary_color\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default (): SMP[] => useStaticQuery(query).smps.nodes;\r\n","import React from 'react';\r\nimport SMPNavMenu from '../components/navMenu/NavMenu';\r\n\r\nimport SEO from '../components/seo';\r\nimport './index.css';\r\n\r\nconst IndexPage = () => (\r\n    <div className=\"homepage-content\">\r\n        <SEO title=\"Home\" description=\"Interactive visualizations for Minecraft series/events.\" />\r\n        <SMPNavMenu />\r\n    </div>\r\n);\r\nexport default IndexPage;\r\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) : (global = global || self, factory(global.swipeable = {}, global.react));\n})(this, function (exports, React) {\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  var LEFT = \"Left\";\n  var RIGHT = \"Right\";\n  var UP = \"Up\";\n  var DOWN = \"Down\";\n  var defaultProps = {\n    delta: 10,\n    preventDefaultTouchmoveEvent: false,\n    rotationAngle: 0,\n    trackMouse: false,\n    trackTouch: true\n  };\n  var initialState = {\n    first: true,\n    initial: [0, 0],\n    start: 0,\n    swiping: false,\n    xy: [0, 0]\n  };\n  var mouseMove = \"mousemove\";\n  var mouseUp = \"mouseup\";\n  var touchEnd = \"touchend\";\n  var touchMove = \"touchmove\";\n  var touchStart = \"touchstart\";\n\n  function getDirection(absX, absY, deltaX, deltaY) {\n    if (absX > absY) {\n      if (deltaX > 0) {\n        return RIGHT;\n      }\n\n      return LEFT;\n    } else if (deltaY > 0) {\n      return DOWN;\n    }\n\n    return UP;\n  }\n\n  function rotateXYByAngle(pos, angle) {\n    if (angle === 0) return pos;\n    var angleInRadians = Math.PI / 180 * angle;\n    var x = pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);\n    var y = pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);\n    return [x, y];\n  }\n\n  function getHandlers(set, handlerProps) {\n    var onStart = function onStart(event) {\n      // if more than a single touch don't track, for now...\n      if (event && \"touches\" in event && event.touches.length > 1) return;\n      set(function (state, props) {\n        // setup mouse listeners on document to track swipe since swipe can leave container\n        if (props.trackMouse) {\n          document.addEventListener(mouseMove, onMove);\n          document.addEventListener(mouseUp, onUp);\n        }\n\n        var _ref = \"touches\" in event ? event.touches[0] : event,\n            clientX = _ref.clientX,\n            clientY = _ref.clientY;\n\n        var xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n        return _extends({}, state, initialState, {\n          initial: [].concat(xy),\n          xy: xy,\n          start: event.timeStamp || 0\n        });\n      });\n    };\n\n    var onMove = function onMove(event) {\n      set(function (state, props) {\n        // Discount a swipe if additional touches are present after\n        // a swipe has started.\n        if (\"touches\" in event && event.touches.length > 1) {\n          return state;\n        }\n\n        var _ref2 = \"touches\" in event ? event.touches[0] : event,\n            clientX = _ref2.clientX,\n            clientY = _ref2.clientY;\n\n        var _rotateXYByAngle = rotateXYByAngle([clientX, clientY], props.rotationAngle),\n            x = _rotateXYByAngle[0],\n            y = _rotateXYByAngle[1];\n\n        var deltaX = x - state.xy[0];\n        var deltaY = y - state.xy[1];\n        var absX = Math.abs(deltaX);\n        var absY = Math.abs(deltaY);\n        var time = (event.timeStamp || 0) - state.start;\n        var velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1);\n        var vxvy = [deltaX / (time || 1), deltaY / (time || 1)]; // if swipe is under delta and we have not started to track a swipe: skip update\n\n        if (absX < props.delta && absY < props.delta && !state.swiping) return state;\n        var dir = getDirection(absX, absY, deltaX, deltaY);\n        var eventData = {\n          absX: absX,\n          absY: absY,\n          deltaX: deltaX,\n          deltaY: deltaY,\n          dir: dir,\n          event: event,\n          first: state.first,\n          initial: state.initial,\n          velocity: velocity,\n          vxvy: vxvy\n        }; // call onSwipeStart if present and is first swipe event\n\n        eventData.first && props.onSwipeStart && props.onSwipeStart(eventData); // Call onSwiping if present\n\n        props.onSwiping && props.onSwiping(eventData); // track if a swipe is cancelable(handler for swiping or swiped(dir) exists)\n        // so we can call preventDefault if needed\n\n        var cancelablePageSwipe = false;\n\n        if (props.onSwiping || props.onSwiped || \"onSwiped\" + dir in props) {\n          cancelablePageSwipe = true;\n        }\n\n        if (cancelablePageSwipe && props.preventDefaultTouchmoveEvent && props.trackTouch && event.cancelable) event.preventDefault();\n        return _extends({}, state, {\n          // first is now always false\n          first: false,\n          eventData: eventData,\n          swiping: true\n        });\n      });\n    };\n\n    var onEnd = function onEnd(event) {\n      set(function (state, props) {\n        var eventData;\n\n        if (state.swiping && state.eventData) {\n          eventData = _extends({}, state.eventData, {\n            event: event\n          });\n          props.onSwiped && props.onSwiped(eventData);\n          var onSwipedDir = \"onSwiped\" + eventData.dir;\n\n          if (onSwipedDir in props) {\n            props[onSwipedDir](eventData);\n          }\n        } else {\n          props.onTap && props.onTap({\n            event: event\n          });\n        }\n\n        return _extends({}, state, initialState, {\n          eventData: eventData\n        });\n      });\n    };\n\n    var cleanUpMouse = function cleanUpMouse() {\n      // safe to just call removeEventListener\n      document.removeEventListener(mouseMove, onMove);\n      document.removeEventListener(mouseUp, onUp);\n    };\n\n    var onUp = function onUp(e) {\n      cleanUpMouse();\n      onEnd(e);\n    };\n    /**\r\n     * Switch of \"passive\" property for now.\r\n     * When `preventDefaultTouchmoveEvent` is:\r\n     * - true => { passive: false }\r\n     * - false => { passive: true }\r\n     *\r\n     * Could take entire `addEventListener` options object as a param later?\r\n     */\n\n\n    var attachTouch = function attachTouch(el, passive) {\n      var cleanup = function cleanup() {};\n\n      if (el && el.addEventListener) {\n        // attach touch event listeners and handlers\n        var tls = [[touchStart, onStart], [touchMove, onMove], [touchEnd, onEnd]];\n        tls.forEach(function (_ref3) {\n          var e = _ref3[0],\n              h = _ref3[1];\n          return el.addEventListener(e, h, {\n            passive: passive\n          });\n        }); // return properly scoped cleanup method for removing listeners, options not required\n\n        cleanup = function cleanup() {\n          return tls.forEach(function (_ref4) {\n            var e = _ref4[0],\n                h = _ref4[1];\n            return el.removeEventListener(e, h);\n          });\n        };\n      }\n\n      return cleanup;\n    };\n\n    var onRef = function onRef(el) {\n      // \"inline\" ref functions are called twice on render, once with null then again with DOM element\n      // ignore null here\n      if (el === null) return;\n      set(function (state, props) {\n        // if the same DOM el as previous just return state\n        if (state.el === el) return state;\n        var addState = {}; // if new DOM el clean up old DOM and reset cleanUpTouch\n\n        if (state.el && state.el !== el && state.cleanUpTouch) {\n          state.cleanUpTouch();\n          addState.cleanUpTouch = undefined;\n        } // only attach if we want to track touch\n\n\n        if (props.trackTouch && el) {\n          addState.cleanUpTouch = attachTouch(el, !props.preventDefaultTouchmoveEvent);\n        } // store event attached DOM el for comparison, clean up, and re-attachment\n\n\n        return _extends({}, state, {\n          el: el\n        }, addState);\n      });\n    }; // set ref callback to attach touch event listeners\n\n\n    var output = {\n      ref: onRef\n    }; // if track mouse attach mouse down listener\n\n    if (handlerProps.trackMouse) {\n      output.onMouseDown = onStart;\n    }\n\n    return [output, attachTouch];\n  }\n\n  function updateTransientState(state, props, attachTouch) {\n    var addState = {}; // clean up touch handlers if no longer tracking touches\n\n    if (!props.trackTouch && state.cleanUpTouch) {\n      state.cleanUpTouch();\n      addState.cleanUpTouch = undefined;\n    } else if (props.trackTouch && !state.cleanUpTouch) {\n      // attach/re-attach touch handlers\n      if (state.el) {\n        addState.cleanUpTouch = attachTouch(state.el, !props.preventDefaultTouchmoveEvent);\n      }\n    }\n\n    return _extends({}, state, addState);\n  }\n\n  function useSwipeable(options) {\n    var trackMouse = options.trackMouse;\n    var transientState = React.useRef(_extends({}, initialState));\n    var transientProps = React.useRef(_extends({}, defaultProps));\n    transientProps.current = _extends({}, defaultProps, options);\n\n    var _React$useMemo = React.useMemo(function () {\n      return getHandlers(function (stateSetter) {\n        return transientState.current = stateSetter(transientState.current, transientProps.current);\n      }, {\n        trackMouse: trackMouse\n      });\n    }, [trackMouse]),\n        handlers = _React$useMemo[0],\n        attachTouch = _React$useMemo[1];\n\n    transientState.current = updateTransientState(transientState.current, transientProps.current, attachTouch);\n    return handlers;\n  }\n\n  exports.DOWN = DOWN;\n  exports.LEFT = LEFT;\n  exports.RIGHT = RIGHT;\n  exports.UP = UP;\n  exports.useSwipeable = useSwipeable;\n});"],"sourceRoot":""}